<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tracking</title>
    <link rel="stylesheet" href="../public/tracker.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" 
    integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI=" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js" 
    integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=" crossorigin=""></script>
    
</head>
<body>
    <h2>Tracking Map</h2>
    <div id="map" style="width: 100%; height: 500px;"></div>
</body>
    <script>
        // Initialize the map
        const map = L.map('map');
        map.setView([12.9716, 77.5946], 13); // Set initial map view to Bangalore coordinates

        // Set up tile layer (OpenStreetMap)
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: 'Â© OpenStreetMap'
        }).addTo(map);

        let marker, circle, zoomed;

        // Watch the position of the user's device and update the location in real time
        navigator.geolocation.watchPosition(success, error);

        function success(pos) {
            const lat = pos.coords.latitude;
            const lng = pos.coords.longitude;
            const accuracy = pos.coords.accuracy;

            // Remove previous marker and circle if any
            if (marker) {
                map.removeLayer(marker);
                map.removeLayer(circle);
            }

            // Add new marker and circle (accuracy circle)
            marker = L.marker([lat, lng]).addTo(map);
            circle = L.circle([lat, lng], { radius: accuracy }).addTo(map);

            // Zoom map to fit the accuracy circle
            if (!zoomed) {
                zoomed = map.fitBounds(circle.getBounds());
            }

            // Center map to the current location
            map.setView([lat, lng]);

            // Send the current location to the server (backend)
            fetch('/api/location/save', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ latitude: lat, longitude: lng, accuracy })
            })
            .then((response) => response.json())
            .then((data) => console.log('Location saved:', data))
            .catch((error) => console.error('Error saving location:', error));
        }

        function error(err) {
            if (err.code === 1) {
                alert("Please allow geolocation access.");
            } else {
                alert("Cannot get current location.");
            }
        }
    </script>

</html>
